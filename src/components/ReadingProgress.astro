---
// Reading progress bar component
---

<div class="reading-progress-container">
  <div class="reading-progress-bar" id="reading-progress"></div>
</div>

<style>
  .reading-progress-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(0, 0, 0, 0.05);
    z-index: 1000;
    transition: opacity 0.3s ease;
  }

  .reading-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    width: 0%;
    transition: width 0.2s ease;
    box-shadow: 0 0 10px rgba(102, 126, 234, 0.5);
  }

  @media (prefers-reduced-motion: reduce) {
    .reading-progress-bar {
      transition: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const progressBar = document.getElementById('reading-progress');
    
    if (!progressBar) return;

    const updateProgress = () => {
      const scrollTop = window.scrollY;
      const docHeight = document.documentElement.scrollHeight - window.innerHeight;
      const scrollPercent = (scrollTop / docHeight) * 100;
      
      progressBar.style.width = `${Math.min(scrollPercent, 100)}%`;
    };

    // Update on scroll with throttling
    let ticking = false;
    const handleScroll = () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateProgress();
          ticking = false;
        });
        ticking = true;
      }
    };

    window.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', updateProgress);
    
    // Initial update
    updateProgress();
  });
</script>
